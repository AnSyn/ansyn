name: Node.js CI

on:
  push:
    branches:
      - 'Add-github-actions'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        python-version: [3.8]

    env:
      CLUSTER: mapathaon-ansyn
      REPO_DEV: 223455578796.dkr.ecr.us-west-2.amazonaws.com/ansyn/client-chrome.v.44
      REPO_PROD: 223455578796.dkr.ecr.us-west-2.amazonaws.com/ansyn/client
      SERVICES_DEV: ansyn-client-chrome-v44
      SERVICES_PROD: ansyn-client
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Deploy to aws
        if: ${{ github.ref == 'Add-github-actions' }}
        run: echo $REPO_DEV $GITHUB_SHA $CLUSTER $SERVICES_DEV

      - run: npm set progress=false
      - run: npm ci
      - run: npm run lint
      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test:single-run
      - run: npm run build:libs
      - run: sh -x scripts/build.sh ansyn $GITHUB_SHA 'test'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: v1-npm-deps-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --user awscli # install aws cli w/o sudo
      - run: export PATH=$PATH:$HOME/.local/bin # put aws in the path
